<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/2.0/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd">
    <mongo:config name="Mongo_DB" username="test" password="test123" doc:name="Mongo DB">
        <mongo:connection-pooling-profile initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_GROW"/>
    </mongo:config>
    <flow name="apiretrievalFlow" doc:name="apiretrievalFlow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" doc:name="HTTP"/>
        <logger level="INFO" doc:name="Input Logger"/>
        <http:body-to-parameter-map-transformer doc:name="Body to Parameter Map"/>
        <choice doc:name="Choice">
            <when expression="#[location!=null]">
                <flow-ref name="TwitterFlow" doc:name="Twitter Flow Reference"/>
                <flow-ref name="GoogleMapsFlow" doc:name="Google Maps Reference"/>
                <data-mapper:transform doc:name="DataMapper"/>
                <jdbc-ee:outbound-endpoint exchange-pattern="one-way"  queryTimeout="-1" doc:name="Database" queryKey="song_id" address="http://localhost:3301/baseURL/string" mimeType="text/plain">
                    <jdbc-ee:transaction action="NONE" timeout="1500"/>
                    <jdbc-ee:query key="song_id" value="insert into Songs(song_id, song_name, location)"/>
                </jdbc-ee:outbound-endpoint>
            </when>
        </choice>
    </flow>
    <flow name="TwitterFlow" doc:name="TwitterFlow">
        <custom-transformer class="com.pandora.rest.client.TwitterRestClient" doc:name="Java"/>
        <data-mapper:transform doc:name="DataMapper"/>
        <mongo:bson-list-to-json doc:name="Mongo DB - Tweet Details"/>
    </flow>
    <flow name="GoogleMapsFlow" doc:name="GoogleMapsFlow" doc:description="This flow is more specific to only Google Maps Retrieval" initialState="started" processingStrategy="synchronous">
        <choice doc:name="Choice">
            <when expression="#[payload['type']] == city">
                <custom-transformer class="com.pandora.rest.client.GoogleMapsRestClient" doc:name="Java">
                    <spring:property name="locationByCity" value="cityName"/>
                </custom-transformer>
            </when>
            <when expression="#[payload['type']] == latitude">
                <custom-transformer class="com.pandora.rest.client.GoogleMapsRestClient" doc:name="Java">
                    <spring:property name="locationByLatitude" value="latitudeName"/>
                </custom-transformer>
            </when>
        </choice>
        <data-mapper:transform doc:name="DataMapper"/>
        <mongo:add-user config-ref="Mongo_DB" newPassword="test" newUsername="test" doc:name="Mongo DB - Map Details"/>
    </flow>
</mule>
